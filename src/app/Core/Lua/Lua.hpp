#pragma once

#include "pch.hpp"
#include "Common.hpp"
#include "VirtualMachine.hpp"

/* Lua Notes:
 * Free variables are placed in the _ENV table. The default value for _ENV is _G, the global "environment",
 *   making free variables - by default - global variables. lua_getglobal accesses this _G "environment".
 * lauxlib is LAuxLib
 * Errors generated by Lua will always be strings, but users can return any type of value as an error.
 *   This has to be handled by the host program.
 * I want to attempt to make Lua operations atomic - every operation has to leave the lua stack as it was.
 */

namespace lua {
    
}
